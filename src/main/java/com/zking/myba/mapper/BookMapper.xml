<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.myba.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="com.zking.myba.model.Book" >
    <constructor >
      <idArg column="book_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="book_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="book_price" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="book_brief" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    book_id, book_name, book_price, book_brief
  </sql>


  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_book where 1=1
      <if test="bookName !=null and bookName !=''">
        and book_name like concat('%',#{bookName},'%')
      </if>
  </select>
<!--choose的使用-->
<!--当参数id有值时优先使用id查询，当id没有值时就去判断用户名是否有值，如果有值就用用户名查询，如果没值，就使查询无结果-->
    <select id="selectSingle"  resultMap="BaseResultMap">
      select <include refid="Base_Column_List"/>
      from t_book where 1=1
     <choose>
       <when test="bookId!=null">
         and book_id=#{bookId}
       </when>
       <when test="bookName !=null and bookName !=''">
         and book_name=#{bookName}
       </when>
       <otherwise>
         and 1=2
       </otherwise>
     </choose>

    </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>

  <select id="lsm" resultType="map">
    select <include refid="Base_Column_List"></include>
    from t_book where 1=1
    <if test="bookName !=null">
      and book_name like concat('%',#{bookName},'%')
    </if>
  </select>
  <select id="mso" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from t_book where 1=1
    <if test="bookName !=null">
      and book_name like concat('%',#{bookName},'%')
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.zking.myba.model.Book" >
    insert into t_book (book_id, book_name, book_price, 
      book_brief)
    values (#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookPrice,jdbcType=REAL}, 
      #{bookBrief,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.zking.myba.model.Book" >
    insert into t_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="bookPrice != null" >
        book_price,
      </if>
      <if test="bookBrief != null" >
        book_brief,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPrice != null" >
        #{bookPrice,jdbcType=REAL},
      </if>
      <if test="bookBrief != null" >
        #{bookBrief,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.zking.myba.model.Book" >
    update t_book
    <set >
      <if test="bookName != null and bookName !=''" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPrice != null" >
        book_price = #{bookPrice,jdbcType=REAL},
      </if>
      <if test="bookBrief != null" >
        book_brief = #{bookBrief,jdbcType=VARCHAR},
      </if>
      book_id=#{bookId},
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.myba.model.Book" >
    update t_book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_price = #{bookPrice,jdbcType=REAL},
      book_brief = #{bookBrief,jdbcType=VARCHAR}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>